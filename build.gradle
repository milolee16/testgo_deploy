plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.node-gradle.node' version '7.0.2'
}

group = 'com.mz'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.corundumstudio.socketio:netty-socketio:2.0.13'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.google.firebase:firebase-admin:9.2.0'

}

tasks.named('test') {
    useJUnitPlatform()
}

// React(Vite) 연동을 위한 설정
node {
	// front 프로젝트가 있는 디렉토리를 지정합니다.
	workDir = file("${project.projectDir}/front")
	// 설치할 Node.js 버전을 지정합니다.
	version = '20.11.1'
	// true로 설정하면 Gradle이 자동으로 Node.js를 다운로드하고 설치합니다.
	download = true
}

// React 빌드 결과물을 Spring Boot의 static 폴더로 복사하는 task
task copyReactBuild(type: Copy) {
	dependsOn 'npm_run_build' // `npm run build` 스크립트 실행 후 동작
	from "$projectDir/front/dist"
	into "$buildDir/resources/main/static"
}

// Spring Boot의 bootJar task가 실행되기 전에 copyReactBuild task를 실행
tasks.named('bootJar') {
	dependsOn 'copyReactBuild'
}
